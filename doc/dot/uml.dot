digraph G {
fontname = "Bitstream Vera Sans"
fontsize = 8

node [
fontname = "Bitstream Vera Sans"
fontsize = 8
shape = "record"
]

edge [
fontname = "Bitstream Vera Sans"
fontsize = 8
]

//
// RESSOURCES
//
subgraph clusterRessources {
label = "Ressources"

// Interface IEntity
IEntity [
label = "{\
\<interface\> - IEntity||\
+ getId() : unsigned int\l\
+ setId(id : unsigned int)\l\
+ getPosX() : unsigned int\l\
+ getPosY() : unsigned int\l\
+ setPosX(x : unsigned int) : void\l\
+ setPosY(y : unsigned int) : void\l\
+ getType() : EntityType\l\
+ getSkinType() : SkinType\l\
+ getPV() : unsigned int\l\
+ setPV(pv : unsigned int) : void\l\
+ getBulletType() : BulletType\l\
+ setBulletType(type ; BulletType) : void\l\
+ getSpawnFrameNum() : unsigned int\l\
+ setSpawnFrameNum(frameNum : unsigned int) : void\l\
+ start(IN : actionList : list\<Action *\>, OUT : partyActionList : list\<Action *\> &)\l\
+ clone() : IEntity *\l\
}"
]

// Class player
Player [
label = "{\
Player|\
- id : unsigned int\l\
- login : string\l\
- passwd : string\l\
- posX : unsigned int\l\
- posY : unsigned int\l\
- typeId : unsigned int\l\
- skinId : unsigned int\l\
- pv : int\l\
- spawnFrameNum : unsigned int\l\
- ready : bool\l\
- color : Color\l|\
+ Player()\l\
+ getLogin() : string\l\
+ setLogin(login : string) : void\l\
+ getPasswd() : string\l\
+ setPasswd(passwd : string) : void\l\
+ isReady() : bool\l\
+ setReady(ready : bool) : void\l\
+ getColor() : Color\l\
+ setColor(color : Color) : void\l\
}"
]

// Class Entity Factory
EntityFactory [
label = "{\
EntityFactory|\
#ifdef UNIX\l\
	typedef libHandler void*\l\
	typedef libProcAddr void*\l\
#endif\l\
#ifdef WIN32\l\
	typedef libHandler HMODULE\l\
	typedef libProcAddr FARPROC\l\
#endif\l\
- entities : map<EntityType, IEntity>\l\
- libHandler : ISharedLybrary &\l\
- \<static\> currentId : unsigned int\l|\
+ getEntity(EntityType) : IEntity &\l\
+ typeExists(EntityType) : bool\l\
- loadEntity(EntityType) : bool\l\
}"
]

//Class ObjectFactory
ObjectFactory [
label = "{\
ObjectFactory|\
- objects : map<ObjectType, IObject>\l|\
+ getObject(ObjectType) : IObject &\l\
+ typeExists(ObjectType) : bool\l\
}"
]

// Interface IObject
IObject [
label = "{\
\<interface\> - IObject||\
+ setChanges(IEntity &, partyActionList : list\<Action *\> &) : void\l\
+ getType() : ObjectType\l\
+ clone() : IObject *\l\
}"
]

// Class BonusHealth
BonusHealth [
label = "{BonusHealth}"
]

// Class Laser
Laser [
label = "{Laser}"
]

// Class DoubleLaser
DoubleLaser [
label = "{DoubleLaser}"
]

// Class Object0
Object0 [
label = "{...}"
]

// Class Ressoruce
Ressource [
label = "{\
Ressource|\
- monsters : vector\<IEntity *\>\l\
- objects : vector\<IObjects *\>\l\
- maps : vector\<Map *\>\l\
- players : vector\<Player *\>\l|\
+ loadMaps(mapScript : fstream) : void\l\
}"
]

// Class Map
Map [
label = "{\
Map|\
- frames : deque\<Frame\>\l\
- mapScript : fstream &\l\
- loaded : bool\l|\
+ Map(mapScript : fstream &)\l\
+ loadMap() : void\l\
+ getNumberOfFrame() : unsigned int\l\
+ getFrame(num : unsigned int) : Frame &\l\
+ getNextFrame() : Frame *\l\
+ popFront() : Frame *\l\
}"
]

// Class Frame
Frame [
label = "{\
Frame|\
- width : unsigned int\l\
- height : unsigned int\l\
- ceil : WallType\l\
- ceilHeight : unsigned int\l\
- floor : WallType\l\
- floorHeight : unsigned int\l\
- monsters : map\<EntityType, pair\<x : int, y : int\>\>\l\
- objects : map\<ObjectType, pair\<x : int, y : int\>\>\l\
}"
]

//
// SHARED LIBRARY ABSTRACTION
//
subgraph clusterAbsSharedLibrary {
label = "SharedLibrary Abstraction (Unix/Win32)"

// Interface ISharedLibrary
ISharedLibrary [
label = "{\
\<interface\> - ISharedLibrary||\
+ libHandler libLoad(string filename)\l\
+ libProcAddr libGetProc(libHandler lib, string filename)\l\
+ bool libFree(libHandler lib)\l\
}"
]

// Class SharedLibrary_unix
SharedLibrary_unix [
label = "SharedLibrary"
]

} // End : Shared Library Abstraction

//
// MONSTER LIBRARY
//
subgraph clusterMonstersLibrary {
label = "Monster Dynamic Library"

// Abstract class AMonster
AMonster [
label = "{\
\<abstract\> - AMonster|\
- id : unsigned int\l\
- posX : unsigned int\l\
- posY : unsigned int\l\
- typeId : unsigned int\l\
- skinId : unsigned int\l\
- pv : int\l\
- spawnFrameNum : unsigned int\l\
}"
]

// Entry points
EntryDynamicLibrary [
label = "{\
\<not a class\> - entry points|\
getInstance() ; IEntity &\l\
}"
]

// Class Monster1
Monster1 [
label = "{Monster1}"
]

// Class Monster2
Monster2 [
label = "{Monster2}"
]

// Class Monster3
Monster3 [
label = "{...}"
]

} // End : Monster Library

edge [
arrowhead = "odiamond"
style = "solid"
]

IEntity -> EntityFactory
IEntity -> Ressource
Map -> Ressource
IObject -> Ressource
Frame -> Map
Player -> Ressource

edge [
arrowhead = "diamond"
style = "solid"
]

ISharedLibrary -> EntityFactory
IObject -> ObjectFactory

edge [
arrowhead = "onormal"
style = "solid"
]

SharedLibrary_unix -> ISharedLibrary
Monster1 -> AMonster
Monster2 -> AMonster
Monster3 -> AMonster

edge [
arrowhead = "onormal"
style = "dashed"
]

Player -> IEntity
AMonster -> IEntity
BonusHealth -> IObject
Laser -> IObject
DoubleLaser -> IObject
Object0 -> IObject

} // End : Ressource


//
// SERVER CORE
//
subgraph clusterServerCore {
label = "Server Core"

// Class Party
Party [
label = "{\
Party|...\l|...\l\
}"
]

// Class Server
Server [
label = "{\
Server|...\l|...\l\
}"
]

Client [
label = "{\
Client|\
+ UDPConnexion : IUDP*\l|\
}"
]

edge [
arrowhead = "diamond"
style = "solid"
]

Ressource -> Party
EntityFactory -> Party
ObjectFactory -> Party

edge [
arrowhead = "odiamond"
style = "solid"
]

Party -> Server

} // End : Server Core

//
// TCPSESSION
//
subgraph clusterTCPSession {
label = "TCPSession Abstraction (Unix/Win32)"

// Interface ITCPSession
ITCPSession [
label = "{\
\<interface\> - ITCPSession|\
+ run() : void\l\
+ poll() : bool\l\
+ write(Data, unsigned int) : int\l\
+ read(Data, unsigned int) : int\l\
+ close() : bool\l\
}"
]

// Class CTCPSession
CTCPSession [
label = "{\
CTCPSession|\
- _socket : int\l\
- _server : TCPServer&\l\
- _bufferSize : unsigned int\l\
- _broken : bool\l\
- _canRead : bool\l\
- _canWrite : bool\l\
- _incoming : list\<Data\>\l\
+ outgoing : list\<Data\>\l\
+ mutexOutgoing : AbsMutex\l|\
+ CTCPSession(socket : int, server : TCPServer&, bufferSize : unsigned int)\l\
+ virtual run() : void\l\
+ poll() : bool\l\
+ write(Data, unsigned int) : int\l\
+ read(Data, unsigned int) : int\l\
+ close() : bool\l\
}"
]

edge [
arrowhead = "onormal"
style = "dashed"
]

CTCPSession -> ITCPSession

}

/*
// Interface ITCPClient
ITCPClient [
label = "{\
\<interface\> - ITCPClient|\
typedef void* Data\l\l\
+ connect() : bool\l\
+ write(Date, unsigned int) : int\l\
+ read(Data, unsigned int) : int\l\
+ close() : bool\l\
}"
]

// Class CTCPClient
CTCPClient [
label = "{\
CTCPClient|\
- _socket : int\l|\
+ connect() : bool\l\
+ write(Date, unsigned int) : int\l\
+ read(Data, unsigned int) : int\l\
+ close() : bool\l\
}"
]

// Class CTCPClient_Win32
CTCPClient_Win32 [
label = "{\
CTCPClient_Win32|\
- _socket : SOCKET\l|\
+ connect() : bool\l\
+ write(Date, unsigned int) : int\l\
+ read(Data, unsigned int) : int\l\
+ close() : bool\l\
}"
]

edge [
arrowhead = "onormal"
style = "dashed"
]

CTCPClient -> ITCPClient
CTCPClient_Win32 -> ITCPClient
*/

//
// TCPSESSION
//
subgraph clusterUDP {
label = "UDPConnexion Abstraction (Unix/Win32)"

// Interface IUDP
IUDP [
label = "{\
\<interface\> - IUDP|\
typedef void* Data\l\l\
+ send(Data, unsigned int) : int\l\
+ receive(unsigned int) : int\l\
+ close() : void\l\
}"
]

// Class CUDP
CUDP [
label = "{\
CUDP|\
- _socket : int\l|\
+ send(Data, unsigned int) : int\l\
+ receive(unsigned int) : int\l\
+ close() : void\l\
}"
]

edge [
arrowhead = "onormal"
style = "dashed"
]

CUDP -> IUDP

edge [
arrowhead = "odiamond"
style = "solid"
]

CUDP -> Client

} // End IUDP

//
// TCPSERVER
//
subgraph clusterTCPServer {
label = "TCPServer Abstraction (Unix/Win32)"

// Interface ITCPServer
ITCPServer [
label = "{\
\<interface\> - ITCPServer|\
typedef void* Data\l\l\
+ init() : bool\l\
+ run() : void\l\
+ processData() : void\l\
+ close() : void\l\
+ accept() : bool\l\
}"
]

// Class CTCPServer
CTCPServer [
label = "{\
CTCPServer|\
- _port : short\l\
- _socket : int\l\
- _bufferSize : unsigned int\l\
- _running : bool\l\
- _sessions : map\<ITCPSession*, AbsThread*\>\l\
+ requests : list\<pair\<ITCPSession*, Data\>\>\l\
+ mutexRequests : AbsMutex\l|\
+ CTCPServer(port : short, bufferSize : unsigned int)\l\
+ init() : bool\l\
+ virtual run() : void\l\
+ virtual processData() : void\l\
+ close() : void\l\
+ virtual accept() : bool\l\
}"
]

edge [
arrowhead = "onormal"
style = "dashed"
]

CTCPServer -> ITCPServer

} // End : TCPServer

//
// THREAD
//
subgraph clusterThread {
label = "Thread & Mutex Abstraction (Unix/Win32)"

// Interface thread
IAbsThread [
label = "{\
\<interface\> - IAbsThread|\
typedef void* (*startRoutine)(void*)\l|\
+ launch(startRoutine, void* args) : bool\l\
+ join() : bool\l\
+ exit() : void\l\
}"
]

// Concrete thread class for unix
CAbsThread [
label = "{\
CAbsThread|\
- _tid : pthread_t*\l|\
+ launch(startRoutine, void* args) : bool\l\
+ join() : bool\l\
+ exit() : void\l\
}"
]

edge [
arrowhead = "onormal"
style = "dashed"
]

CAbsThread -> IAbsThread

// Interface IAbsMutex
IAbsMutex [
label = "{\
\<interface\> - IAbsMutex|\
+ init() : bool\l\
+ destroy() : void\l\
+ lock() : bool\l\
+ tryLock() : bool\l\
+ unlock() : bool\l\
}"
]

// Class CAbsMutex
CAbsMutex [
label = "{\
CAbsMutex|\
- _mid : pthread_mutex_t*\l|\
+ init() : bool\l\
+ destroy() : void\l\
+ lock() : bool\l\
+ tryLock() : bool\l\
+ unlock() : bool\l\
}"
]

edge [
arrowhead = "onormal"
style = "dashed"
]

CAbsMutex -> IAbsMutex

} // End : thread

edge [
arrowhead = "diamond"
style = "solid"
]

IAbsMutex -> CTCPServer
IAbsMutex -> CTCPSession
IAbsThread -> CTCPServer

edge [
arrowhead = "odiamond"
style = "solid"
]

CTCPServer -> CTCPSession
Client -> Server

edge [
arrowhead = "onormal"
style = "solid"
]

Client -> CTCPSession

edge [
arrowhead = "onormal"
style = "solid"
]

Server -> CTCPServer

}
