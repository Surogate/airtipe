digraph G {
fontname = "Bitstream Vera Sans"
fontsize = 8

node [
fontname = "Bitstream Vera Sans"
fontsize = 8
shape = "record"
]

// Interface IEntity
IEntity [
label = "{\
\<interface\> - IEntity|\
+ GetId() : unsigned int\l\
+ SetId(id : unsigned int)\l\
+ GetPosX() : unsigned int\l\
+ GetPosY() : unsigned int\l\
+ SetPosX(x : unsigned int) : void\l\
+ GetPosY(y : unsigned int) : void\l\
+ GetWidth() : unsigned int\l\
+ SetWidth(unsigned int) : void\l\
+ GetHeight() : unsigned int\l\
+ SetHeight(unsigned int) : void\l\
+ GetType() : EntityType\l\
+ GetSkinType() : SkinType\l\
+ GetPV() : unsigned int\l\
+ SetPV(pv : unsigned int) : void\l\
+ GetBullet() const : IEntity const * const\l\
+ SetBullet(IEntity *) : void\l\
+ GetItems() const : vector\<IEntity *\> const &\l\
+ PushItem(IEntity *) : void\l\
+ DropItem(IEntity *) : void\l\
+ AddItem(IEntity *) : void\l\
+ GetSpawnFrameNum() : unsigned int\l\
+ SetSpawnFrameNum(frameNum : unsigned int) : void\l\
+ GetType() : EntityType\l\
+ IsMonsterKiller() : bool\l\
+ IsPlayerKiller() : bool\l\
+ Start() : void\l\
+ Clone() : IEntity *\l\
}"
]

subgraph clusterGenericFactory {
label = "Diagram Factory.dot.png"

// Template class Factory
Factory [
label = "{\
template \<class AbstractType,\l\
		  typename IdentifierName\l\
		  typename Creator\l\
		  template\<typename, class\> class FactoryErrorPolicy\>\l\l\
Factory|\
+ Register(id : const IdentifierType&, newProduct : AbstractProduct *, creator : Creator) : bool\l\
+ Unregister(id : const IdentifierType&) : bool\l\
+ CreateObject(id : const IdentifierType&) : AbstractProduct *\l|\
typedef map\<IdentifierType, pair\<AbstractProduct *, Creator\> *\> AssocMap\l\
AssocMap _associations\l\
}"
]

}

// Class Ressource
Ressource [
label = "{\
Ressource|\
- _monsterFactory : Factory\l\
- _bulletFactory : Factory\l\
- _itemFactory : Factory\l\
- _playerFactory : Factory\l\
- _monsters : vector\<AMonster *\>\l\
- _bullets : vector\<ABullet *\>\l\
- _items : vector\<AItem *\>\l\
- _maps : vector\<Map *\>\l\
- _players : vector\<APlayer *\>\l|\
+ loadMaps(mapScript : fstream) : void\l\
}"

]

// Class Map
Map [
label = "{\
Map|\
- _frames : deque\<Frame\>\l\
- _mapScript : fstream &\l\
- _loaded : bool\l|\
+ Map(mapScript : fstream &)\l\
+ loadMap() : void\l\
+ getNumberOfFrame() : unsigned int\l\
+ getFrame(num : unsigned int) : Frame &\l\
+ getNextFrame() : Frame *\l\
+ popFront() : Frame *\l\
}"
]

// Class Frame
Frame [
label = "{\
Frame|\
- _width : unsigned int\l\
- _height : unsigned int\l\
- _ceil : GroundType\l\
- _ceilHeight : unsigned int\l\
- _floor : GroundType\l\
- _floorHeight : unsigned int\l\
- _monsters : map\<EntityType, pair\<x : int, y : int\>\>\l\
- _objects : map\<ItemType, pair\<x : int, y : int\>\>\l\
}"
]

//
// SHARED LIBRARY ABS SUBGRAPH
//
subgraph clusterAbsSharedLibrary {
label = "SharedLibrary Abstraction (Unix/Win32)"

// Interface ISharedLibrary
ISharedLibrary [
label = "{\
\<interface\> - ISharedLibrary|\
+ libLoad(string filename) : LibHandler\l\
+ libGetProc(libHandler lib, string filename) : LibProcAddr\l\
+ LibFree(libHandler lib) : bool\l\
}"
]

// Class SharedLibrary_unix
SharedLibrary_Unix [
label = "SharedLibrary_Unix"
]

// Class SharedLibrary_unix
SharedLibrary_Win32[
label = "SharedLibrary_Win32"
]


} // END SHARED LIBRARY ABS SUBGRAPH

//
// DINAMIC LIBRARY SUBGRAPH
//
subgraph clusterMonstersLibrary {
label = "Entity Dynamic Libraries"

// Class Monster1
Monster1 [
label = "{Monster1||}"
]

// Class Monster2
Monster2 [
label = "{Monster2||}"
]

// Class BulletLaser
BulletLaser [
label = "{\
BulletLaser||\
}"
]

// Class BulletDoubleLaser
BulletDoubleLaser [
label = "{\
BulletDoubleLaser||\
}"
]

PlayerBlue [
label = "{\
PlayerBlue||\
}"
]

PlayerYellow [
label = "{\
PlayerYellow||\
}"
]

PlayerGreen [
label = "{\
PlayerGreen||\
}"
]

PlayerRed [
label = "{\
PlayerRed||\
}"
]

// Class BonusHealth
BonusHealth [
label = "{ItemBonusHealth||}"
]

// Class Laser
Laser [
label = "{ItemLaser||}"
]

// Class DoubleLaser
DoubleLaser [
label = "{ItemDoubleLaser||}"
]

} // END : DYNAMIC LIBRARY SUBGRAPH

// Abstract class AMonster
AMonster [
label = "{\
\<abstract\> - AMonster|\
- _id : unsigned int\l\
- _type : EntityType\l\
- _posX : unsigned int\l\
- _posY : unsigned int\l\
- _width : unsigned int\l\
- _height : unsigned int\l\
- _skinId : SkinType\l\
- _bullet : IEntity *\l\
- _started : Timestamp\l\
- _playerKiller : bool\l\
- _monsterKiller : bool\l\
- _items : vector\<IEntity *\>\l\
- _pv : int\l\
- _spawnFrameNum : unsigned int\l\
}"
]

// Class player
APlayer [
label = "{\
\<abstract\> - APlayer|\
- _id : unsigned int\l\
- _type : EntityType\l\
- _posX : unsigned int\l\
- _posY : unsigned int\l\
- _width : unsigned int\l\
- _height : unsigned int\l\
- _skinId : SkinType\l\
- _bullet : IEntity *\l\
- _started : Timestamp\l\
- _items : vector\<IEntity *\>\l\
- _pv : int\l\
- _spawnFrameNum : unsigned int\l\
}"
]

// Class AItem
AItem [
label = "{\
\<abstract\> - AItem|\
- _id : unsigned int\l\
- _type : EntityType\l\
- _posX : unsigned int\l\
- _posY : unsigned int\l\
- _width : unsigned int\l\
- _height : unsigned int\l\
- _skinId : SkinType\l\
- _bullet : IEntity *\l\
- _started : Timestamp\l\
- _items : vector\<IEntity *\>\l\
- _pv : int\l\
- _spawnFrameNum : unsigned int\l\
}"
]

// Class ABullet
ABullet [
label = "{\
\<abstract\> - ABullet|\
- _id : unsigned int\l\
- _type : EntityType\l\
- _posX : unsigned int\l\
- _posY : unsigned int\l\
- _width : unsigned int\l\
- _height : unsigned int\l\
- _skinId : SkinType\l\
- _bullet : IEntity *\l\
- _started : Timestamp\l\
- _items : vector\<IEntity *\>\l\
- _pv : int\l\
- _spawnFrameNum : unsigned int\l\
}"
]

AMovement [
label = "{\
AMovement|\
- _timeStart : Timestamp\l|\
+ GetPosition() : pair\<x : unsigned int, y : unsigned int\>\l\
+ GetPositionAt(time : Timestamp) : pair\<x : unsigned int, y : unsigned int\>\l\
}"
]

CircularMovement [
label = "{CircularMovement}"
]

VectorialMovement [
label = "{VectorialMovement}"
]

NoMovement [
label = "{NoMovement}"
]

EnumSkinType [
label = "{\
\<Enum\> - SkinType|\
Tentacle\l\
Alien\l\
...\l\
}"
]

EnumGroundType [
label = "{\
\<Enum\> - GroundType|\
CeilLevel1\l\
FloorLevel1\l\
...\l\
}"
]

EnumEntityType [
label = "{\
\<Enum\> - EntityType|\
Monster\l\
Item\l\
Player\l\
Bullet\l\
}"
]

edge [
fontname = "Bitstream Vera Sans"
fontsize = 8
]

// Composition
Factory -> Ressource [arrowhead = "diamond" style = "solid"]
AMovement -> APlayer [arrowhead = "diamond" style = "solid"]
AMovement -> AItem [arrowhead = "diamond" style = "solid"]
AMovement -> ABullet [arrowhead = "diamond" style = "solid"]
AMovement -> AMonster [arrowhead = "diamond" style = "solid"]

// Uses
EnumSkinType -> IEntity [arrowhead = "vee" style = "solid"]
EnumGroundType -> Frame [arrowhead = "vee" style = "solid"]
EnumEntityType -> IEntity [arrowhead = "vee" style = "solid"]


// Aggregation
AMonster -> Ressource [arrowhead = "odiamond" style = "solid"]
AItem -> Ressource [arrowhead = "odiamond" style = "solid"]
ABullet -> Ressource [arrowhead = "odiamond" style = "solid"]
APlayer -> Ressource [arrowhead = "odiamond" style = "solid"]
Map -> Ressource [arrowhead = "odiamond" style = "solid"]
Frame -> Map [arrowhead = "odiamond" style = "solid"]

// Heritage
Monster1 -> AMonster [arrowhead = "onormal" style = "solid"]
Monster2 -> AMonster [arrowhead = "onormal" style = "solid"]
BulletLaser -> ABullet [arrowhead = "onormal" style = "solid"]
BulletDoubleLaser -> ABullet [arrowhead = "onormal" style = "solid"]
PlayerBlue -> APlayer [arrowhead = "onormal" style = "solid"]
PlayerYellow -> APlayer [arrowhead = "onormal" style = "solid"]
PlayerRed -> APlayer [arrowhead = "onormal" style = "solid"]
PlayerGreen -> APlayer [arrowhead = "onormal" style = "solid"]
BonusHealth -> AItem [arrowhead = "onormal" style = "solid"]
Laser -> AItem [arrowhead = "onormal" style = "solid"]
DoubleLaser -> AItem [arrowhead = "onormal" style = "solid"]
Ressource -> SharedLibrary_Unix [arrowhead = "onormal" style = "solid"]
Ressource -> SharedLibrary_Win32 [arrowhead = "onromal" style = "solid"]
CircularMovement -> AMovement [arrowhead = "onromal" style = "solid"]
VectorialMovement -> AMovement [arrowhead = "onromal" style = "solid"]
NoMovement -> AMovement [arrowhead = "onromal" style = "solid"]

// Implement interface
SharedLibrary_Unix -> ISharedLibrary [arrowhead = "onormal" style = "dashed"]
SharedLibrary_Win32 -> ISharedLibrary [arrowhead = "onormal" style = "dashed"]
APlayer -> IEntity [arrowhead = "onormal" style = "dashed"]
AItem -> IEntity [arrowhead = "onormal" style = "dashed"]
ABullet -> IEntity [arrowhead = "onormal" style = "dashed"]
AMonster -> IEntity [arrowhead = "onormal" style = "dashed"]

}
