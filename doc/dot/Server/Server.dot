digraph G {
fontname = "Bitstream Vera Sans"
fontsize = 8

node [
fontname = "Bitstream Vera Sans"
fontsize = 8
shape = "record"
]

subgraph clusterRessources1 {
label = "Diagram Ressources.dot.png"

// Class Ressource
Ressource [
label = "{\
Ressource|\
- _monsterFactory : Factory\l\
- _bulletFactory : Factory\l\
- _itemFactory : Factory\l\
- _playerFactory : Factory\l\
- _monsters : vector\<AMonster *\>\l\
- _bullets : vector\<ABullet *\>\l\
- _items : vector\<AItem *\>\l\
- _maps : vector\<Map *\>\l\
- _players : vector\<APlayer *\>\l|\
+ loadMaps(mapScript : fstream) : void\l\
}"

]

}

// Class Game
Game [
label = "{\
Game|\
- _UDPServer : UDP\l\
- _ressources : Ressource\l\
- _pf : PacketFactory &\l\
- _pe : PhysicEngine\l\
- _startTime : Timestamp\l\
- _valid : bool\l\
- _started : bool\l\
- _actions : map\<PacketCode, GameActionFunc\>\l\
- _players : map\<TCPSession*, pair\<id : unsigned int, player : APlayer &\>\>\l|\
- APlayerMove(pak : Packet const &) : Packet *\l\
- APlayerFight(pak : Packet const &) : Packet *\l\
- ReadClients() : void\l\
- RespondClients() : void\l\
- CheckCollision() : void\l\
+ Start() : bool\l\
+ Stop() : bool\l\
+ MoveEntities() : void\l\
+ CheckCollisions : void\l\
+ BroadcastMapState() : void\l\
+ AddAPlayer(player : TCPSession *) : void\l\
+ DelAPlayer(player : TCPSession *) : void\l\
+ SetAPlayerReady(player : TCPSession *, ready : bool) : void\l\
+ IsValid() : bool\l\
+ IsStarted() : bool\l\
+ SetValid(valid : bool) : void\l\
+ ChangeAPlayerColor(player : TCPSession *, color : ColorType) : bool\l\
- BroadcastPacket(pak : Packet *) : void\l\
}"
]

// Class PhysicEngine
PhysicEngine [
label = "{\
PhysicEngine|\
- _ressources : Ressources &\l\
- _startTime : Timestamp\l\
- _environmentCollisions : list\<IEntity *\>\l\
- _outOfMapEntities : list\<IEntity *\>\l\
- _entityCollisions : list\<pair\<IEntity *, IEntity *\>\>\l\
- _objectCollisions : list\<pair\<IEntity *, IEntity *\>\>\l|\
+ PhysicEngine(ressources : Ressource &, startTime : Timestamp)\l\
+ checkCollision() : bool\l\
+ getEnvironmentCollisions() : list\<IEntity *\> &\l\
+ getEntityCollisions() : list\<pair\<IEntity *, IEntity *\>\> &\l\
+ getObjectCollisions() : list\<pair\<IEntity &, IEntity *\>\> &\l\
+ getOutOfMapEntities() : list\<IEntity *\> &\l\
- getCamera() : void\l\
}"
]

// Class Server
Server [
label = "{\
Server|\
- _pf : PacketFactory &\l\
- _parties : list\<Game\>\l\
- _actions : map\<PacketCode, ServerActionFunc\>\l|\
- createGame(pak : Packet const &) : Packet *\l\
+ run() : void\l\
+ accept() : bool\l\
- login(pak : Packet const &) : Packet *\l\
- create(pak : Packet const &) : Packet *\l\
- addMap(pak : Packet const &) : Packet *\l\
- validGame(pak : Packet const &) : Packet *\l\
- join(pak : Packet const &) : Packet *\l\
- colorChange(pak : Packet const &) : Packet *\l\
- ready(pak : Packet const &) : Packet *\l\
- start(pak : Packet const &) : Packet *\l\
- stop(pak : Packet const &) : Packet *\l\
- quit(pak : Packet const &) : Packet *\l\
}"
]

//
// TCPSESSION SUBGRAPH
//
subgraph clusterTCPSession {
label = "Diagram Network.dot.png"

// Class TCPSession
TCPSession [
label = "{\
TCPSession|\
- _socket : int\l\
- _server : TCPServer&\l\
- _bufferSize : unsigned int\l\
- _broken : bool\l\
- _incoming : list\<Data\>\l|\
+ TCPSession(socket : int, server : TCPServer&, bufferSize : unsigned int)\l\
+ write(Data, unsigned int) : int\l\
+ read(Data, unsigned int) : int\l\
+ close() : bool\l\
}"
]

} // END : TCPSESSION SUBGRAPH

//
// UDP SUBGRAPH
//
subgraph clusterUDP {
label = "Diagram Network.dot.png"

// Class UDP
UDP [
label = "{\
UDP|\
- _socket : int\l\
- _receivers : list\<sockaddr*\>\l|\
+ send(Data, unsigned int) : int\l\
+ receive(unsigned int) : int\l\
+ sendTo(Data, unsigned int, sockaddr*) : int\l\
+ receiveFrom(Data, unsigned int, sockaddr*) : int\l\
+ close() : void\l\
}"
]

} // END : UDP SUBGRAPH

//
// TCPSERVER SUBGRAPH
//
subgraph clusterTCPServer {
label = "Diagram Network.dot.png"

// Class TCPServer
TCPServer [
label = "{\
TCPServer|\
- _port : short\l\
- _socket : int\l\
- _bufferSize : unsigned int\l\
- _running : bool\l\
- _sessions : list\<TCPSession*\>\l\
- _requests : list\<pair\<ITCPSession*, Data\>\>\l|\
+ TCPServer(port : short, bufferSize : unsigned int)\l\
+ init() : bool\l\
+ virtual run() : void\l\
+ poll() : void\l\
+ poll_one() : void\l\
+ close() : void\l\
+ virtual accept() : bool\l\
}"
]

} // END : TCPSERVER SUBGRAPH

ThreadPool [
label = "{\
ThreadPool|\
- _maxThreads : unsigned int\l\
- _maxRoutine : unsigned int\l\
- _threads : vector\<AbsThread\>[_maxThreads]\l\
- _in : map\<RoutineID, startRoutine\>\l\
- _mutexIn : AbsMutex\l|\
+ run() : void\l\
}"
]

//
// THREAD SUBGRAPH
//
subgraph clusterThread {
label = "Diagram ThreadMutex.dot.png"

// Concrete thread class for unix
AbsThread [
label = "{\
AbsThread|\
- _tid : pthread_t*\l|\
+ launch(startRoutine, void* args) : bool\l\
+ join() : bool\l\
+ exit() : void\l\
}"
]

} // END : THREAD SUBGRAPH

//
// MUTEX SUBGRAPH
//
subgraph clusterMutex {
label = "Diagram ThreadMutex.dot.png"

// Class AbsMutex
AbsMutex [
label = "{\
AbsMutex|\
- _mid : pthread_mutex_t*\l|\
+ init() : bool\l\
+ destroy() : void\l\
+ lock() : bool\l\
+ tryLock() : bool\l\
+ unlock() : bool\l\
}"
]

} // END : MUTEX SUBGRAPH

//
// APACKET SUBGRAPH
//
subgraph clusterPacket {
label = "Diagram Packet.dot.png"

Packet [
label = "{\
Packet|\
+ header : PacketHeader\l\
+ data : AData\l|\
}"
]

}

subgraph clusterGenericFactory {
label = "Diagram Factory.dot.png"

// Template class Factory
Factory [
label = "{\
template \<class AbstractType,\l\
		  typename IdentifierName\l\
		  typename Creator\l\
		  template\<typename, class\> class FactoryErrorPolicy\>\l\l\
Factory|\
+ Register(id : const IdentifierType&, newProduct : AbstractProduct *, creator : Creator) : bool\l\
+ Unregister(id : const IdentifierType&) : bool\l\
+ CreateObject(id : const IdentifierType&) : AbstractProduct *\l|\
typedef map\<IdentifierType, pair\<AbstractProduct *, Creator\> *\> AssocMap\l\
AssocMap _associations\l\
}"
]

}

edge [
fontname = "Bitstream Vera Sans"
fontsize = 8
]

// Composition
AbsMutex -> PhysicEngine [arrowhead = "diamond" style = "solid"]
AbsMutex -> Ressource [arrowhead = "diamond" style = "solid"]
Ressource -> Game [arrowhead = "diamond" style = "solid"]
Factory -> Server [arrowhead = "diamond" style = "solid"]
Factory -> Game [arrowhead = "diamond" style = "solid"]
PhysicEngine -> Game [arrowhead = "diamond" style = "solid"]
Ressource -> PhysicEngine [arrowhead = "diamond" style = "solid"]
ThreadPool -> Server [arrowhead = "diamond" style = "solid"]
AbsThread -> ThreadPool [arrowhead = "diamond" style = "solid"]
AbsMutex -> ThreadPool [arrowhead = "diamond" style = "solid"]

// Aggregation
TCPSession -> TCPServer [arrowhead = "odiamond" style = "solid"]
TCPSession -> Game [arrowhead = "odiamond" style = "solid"]
Game -> Server [arrowhead = "odiamond" style = "solid"]
Packet -> Factory [arrowhead = "odiamond" style = "solid"]

// Heritage
Server -> TCPServer [arrowhead = "onormal" style = "solid"]
Game -> UDP [arrowhead = "onormal" style = "solid"] 

}
