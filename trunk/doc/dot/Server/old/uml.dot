digraph G {
fontname = "Bitstream Vera Sans"
fontsize = 8

node [
fontname = "Bitstream Vera Sans"
fontsize = 8
shape = "record"
]

// Interface IEntity
IEntity [
label = "{\
\<interface\> - IEntity|\
+ getId() : unsigned int\l\
+ setId(id : unsigned int)\l\
+ getPosX() : unsigned int\l\
+ getPosY() : unsigned int\l\
+ setPosX(x : unsigned int) : void\l\
+ setPosY(y : unsigned int) : void\l\
+ getType() : EntityType\l\
+ getSkinType() : SkinType\l\
+ getPV() : unsigned int\l\
+ setPV(pv : unsigned int) : void\l\
+ getBulletType() : BulletType\l\
+ setBulletType(type ; BulletType) : void\l\
+ getSpawnFrameNum() : unsigned int\l\
+ setSpawnFrameNum(frameNum : unsigned int) : void\l\
+ start(IN : actionList : list\<Action *\>, OUT : partyActionList : list\<Action *\> &)\l\
+ clone() : IEntity *\l\
}"
]

// Class player
Player [
label = "{\
Player|\
- _id : unsigned int\l\
- _login : string\l\
- _posX : unsigned int\l\
- _posY : unsigned int\l\
- _typeId : unsigned int\l\
- _skinId : unsigned int\l\
- _pv : int\l\
- _spawnFrameNum : unsigned int\l\
- _ready : bool\l\
- _color : Color\l|\
+ Player()\l\
+ getLogin() : string\l\
+ setLogin(login : string) : void\l\
+ isReady() : bool\l\
+ setReady(ready : bool) : void\l\
+ getColor() : Color\l\
+ setColor(color : Color) : void\l\
}"
]

// Class EntityFactory
EntityFactory [
label = "{\
\<singleton\> - EntityFactory|\
#ifdef UNIX\l\
	typedef libHandler void*\l\
	typedef libProcAddr void*\l\
#endif\l\
#ifdef WIN32\l\
	typedef libHandler HMODULE\l\
	typedef libProcAddr FARPROC\l\
#endif\l\
- _entities : map<EntityType, IEntity>\l\
- _libHandler : ISharedLybrary &\l\
- \<static\> _currentId : unsigned int\l|\
+ getInstance() : EntityFactory &\l\
+ getEntity(EntityType) : IEntity &\l\
+ typeExists(EntityType) : bool\l\
- loadEntity(EntityType) : bool\l\
}"
]

//Class ObjectFactory
ObjectFactory [
label = "{\
\<singleton\> - ObjectFactory|\
- _objects : map<ObjectType, IObject>\l|\
+ getInstance() : ObjectFactory &\l\
+ getObject(ObjectType) : IObject &\l\
+ typeExists(ObjectType) : bool\l\
}"
]

// Interface IObject
IObject [
label = "{\
\<interface\> - IObject|\
+ setChanges(IEntity &, partyActionList : list\<Action *\> &) : void\l\
+ getType() : ObjectType\l\
+ clone() : IObject *\l\
}"
]

// Class BonusHealth
BonusHealth [
label = "{BonusHealth}"
]

// Class Laser
Laser [
label = "{Laser}"
]

// Class DoubleLaser
DoubleLaser [
label = "{DoubleLaser}"
]

// Class Object0
Object0 [
label = "{...}"
]

// Class Ressoruce
Ressource [
label = "{\
Ressource|\
- _entityFactory : EntityFactory &\l\
- _objectFactory : ObjectFactory &\l\
- _entities : vector\<IEntity *\>\l\
- _objects : vector\<IObjects *\>\l\
- _maps : vector\<Map *\>\l\
- _players : vector\<Player *\>\l|\
+ loadMaps(mapScript : fstream) : void\l\
}"
]

// Class Map
Map [
label = "{\
Map|\
- _frames : deque\<Frame\>\l\
- _mapScript : fstream &\l\
- _loaded : bool\l|\
+ Map(mapScript : fstream &)\l\
+ loadMap() : void\l\
+ getNumberOfFrame() : unsigned int\l\
+ getFrame(num : unsigned int) : Frame &\l\
+ getNextFrame() : Frame *\l\
+ popFront() : Frame *\l\
}"
]

// Class Frame
Frame [
label = "{\
Frame|\
- _width : unsigned int\l\
- _height : unsigned int\l\
- _ceil : WallType\l\
- _ceilHeight : unsigned int\l\
- _floor : WallType\l\
- _floorHeight : unsigned int\l\
- _monsters : map\<EntityType, pair\<x : int, y : int\>\>\l\
- _objects : map\<ObjectType, pair\<x : int, y : int\>\>\l\
}"
]

// Interface ISharedLibrary
ISharedLibrary [
label = "{\
\<interface\> - ISharedLibrary|\
+ libHandler libLoad(string filename)\l\
+ libProcAddr libGetProc(libHandler lib, string filename)\l\
+ bool libFree(libHandler lib)\l\
}"
]

// Class SharedLibrary_unix
SharedLibrary_unix [
label = "SharedLibrary"
]

// Abstract class AEntity
AEntity [
label = "{\
\<abstract\> - AEntity|\
- _id : unsigned int\l\
- _posX : unsigned int\l\
- _posY : unsigned int\l\
- _typeId : unsigned int\l\
- _skinId : unsigned int\l\
- _pv : int\l\
- _spawnFrameNum : unsigned int\l\
- _pf : PacketFactory &\l\
+ requests : list\<Packet *\>\l\
+ mutexRequests : AbsMutex\l\
}"
]

// Entry points
EntryDynamicLibrary [
label = "{\
\<not a class\> - entry points|\
getInstance() ; IEntity &\l\
}"
]

// Class Monster1
Monster1 [
label = "{Monster1}"
]

// Class Monster2
Monster2 [
label = "{Monster2}"
]

// Class Monster3
Monster3 [
label = "{...}"
]

// Class Party
Party [
label = "{\
Party|\
- _UDPServer : UDP\l\
- _ressources : Ressource\l\
- _players : map\<Player &, Client &\>\l\
- _thread : AbsThread\l\
- _pf : PacketFactory &\l\
- _pe : PhysicEngine\l\
- _startTime : Timestamp\l\
- _actions : map\<PacketCode, PartyActionFunc\>\l|\
- _entities : list\<pair\<IEntity *, AbsThread *\>\>\l\
- playerMove(pak : APacket const &) : APacket *\l\
- playerKill(pak : APacket const &) : APacket *\l\
- monsterSpawn(pak : APacket const &) : APacket *\l\
- readEntities() : void\l\
- checkCollision() : void\l\
}"
]

// Class PhysicEngine
PhysicEngine [
label = "{\
PhysicEngine|\
- _ressources : Ressources &\l\
- _startTime : Timestamp\l\
- _environmentCollisions : list\<IEntity *\>\l\
- _entityCollisions : list\<pair\<IEntity *, IEntity *\>\>\l\
- _objectCollisions : list\<pair\<Player &, IObject *\>\>\l|\
+ PhysicEngine(ressources : Ressource &, startTime : Timestamp)\l\
+ checkCollision() : bool\l\
+ getEnvironmentCollisions() : list\<IEntity *\> &\l\
+ getEntityCollisions() : list\<pair\<IEntity *, IEntity *\>\> &\l\
+ getObjectCollisions() : list\<pair\<Player &, IObject *\>\> &\l\
- getCamera() : void\l\
}"
]

// Class Server
Server [
label = "{\
Server|\
- _pf : PacketFactory &\l\
- _parties : vector\<Party\>\l\
- _actions : map\<PacketCode, ServerActionFunc\>\l\
- _clients : vector\<Client\>\l|\
- createParty(pak : APacket const &) : APacket *\l\
+ run() : void\l\
+ processData() : void\l\
+ accept() : bool\l\
}"
]

// Class Client
Client [
label = "{\
Client||\
+ run() : void\l\
}"
]

// Class PacketFactory
PacketFactory [
label = "{\
\<singleton\> - PacketFactory|\
- packets : map\<PaketCode, Packet\>\l|\
+ getInstance() : PacketFactory &\l\
+ getPacket(PacketCode) : IPacket &\l\
+ typeExists(PacketCode) : bool\l\
}"
]

APacket [
label = "{\
\<abstract\> - APacket||\
+ header : PacketHeader\l\
+ data : AData\l\
}"
]

AData [
label = "{\
\<abstract\> - AData||\
}"
]

PacketHeader [
label = "{\
PacketHeader||\
+ code : PacketCode\l\
+ time : Timestamp\l\
+ dataSize : unsigned int\l\
}"
]

PacketLogin [
label = "{\
PacketLogin||\
+ login : char[15]\l\
}"
]

PacketColor [
label = "{\
PacketColor||\
+ color : colorCode\l\
}"
]

PacketCreateParty [
label = "{\
PacketCreateParty||\
+ nbPlayersMin : unsigned int\l\
+ nbPlayerMax : unsigned int\l\
}"
]

PacketMap [
label = "{\
PacketMap||\
+ mapName : char[15]\l\
}"
]

PacketReady [
label = "{\
PacketReady||\
+ ready : bool\l\
}"
]

PacketAction [
label = "{\
PacketAction||\
+ id : unsigned int\l\
+ dir : DirectionCode\l\
}"
]

PacketLoginId [
label = "{\
PacketLoginId||\
+ login : char[15]\l\
+ id : unsigned int\l\
}"
]

PacketLoginColor [
label = "{\
PacketLoginColor||\
+ login : char[15]\l\
+ color : ColorCode\l\
}"
]

PacketSpawn [
label = "{\
PacketSpawn||\
+ id : unsigned int\l\
+ type : EntityType\l\
+ skinType : SkinType\l\
+ bulletType : BulletType\l\
+ x : unsigned int\l\
+ y : unsigned int\l\
+ frameNum : unsigned int\l\
}"
]

PacketEmpty [
label = "{\
PacketEmpty\
}"
]

PacketMove [
label = "{\
PacketMove||\
+ id : unsigned int\l\
+ x : unsigned int\l\
+ y : unsigned int\l\
}"
]

PacketId [
label = "{\
PacketId||\
+ id : unsigned int\l\
}"

]

PacketFight [
label = "{\
PacketFight||\
+ id : unsigned int\l\
+ dir : DirectionCode\l\
}"

]

PacketBullet [
label = "{\
PacketBullet||\
+ bullet : BulletType\l\
}"

]

// Interface ITCPSession
ITCPSession [
label = "{\
\<interface\> - ITCPSession|\
+ run() : void\l\
+ poll() : bool\l\
+ write(Data, unsigned int) : int\l\
+ read(Data, unsigned int) : int\l\
+ close() : bool\l\
}"
]

// Class TCPSession
TCPSession [
label = "{\
TCPSession|\
- _socket : int\l\
- _server : TCPServer&\l\
- _bufferSize : unsigned int\l\
- _broken : bool\l\
- _canRead : bool\l\
- _canWrite : bool\l\
- _incoming : list\<Data\>\l\
+ outgoing : list\<Data\>\l\
+ mutexOutgoing : AbsMutex\l|\
+ TCPSession(socket : int, server : TCPServer&, bufferSize : unsigned int)\l\
+ virtual run() : void\l\
+ poll() : bool\l\
+ write(Data, unsigned int) : int\l\
+ read(Data, unsigned int) : int\l\
+ close() : bool\l\
}"
]

// Interface IUDP
IUDP [
label = "{\
\<interface\> - IUDP|\
typedef void* Data\l\l\
+ send(Data, unsigned int) : int\l\
+ receive(unsigned int) : int\l\
+ close() : void\l\
}"
]

// Class UDP
UDP [
label = "{\
UDP|\
- _socket : int\l|\
+ send(Data, unsigned int) : int\l\
+ receive(unsigned int) : int\l\
+ close() : void\l\
}"
]

// Interface ITCPServer
ITCPServer [
label = "{\
\<interface\> - ITCPServer|\
typedef void* Data\l\l\
+ init() : bool\l\
+ run() : void\l\
+ processData() : void\l\
+ close() : void\l\
+ accept() : bool\l\
}"
]

// Class TCPServer
TCPServer [
label = "{\
TCPServer|\
- _port : short\l\
- _socket : int\l\
- _bufferSize : unsigned int\l\
- _running : bool\l\
- _sessions : map\<ITCPSession*, AbsThread*\>\l\
+ requests : list\<pair\<ITCPSession*, Data\>\>\l\
+ mutexRequests : AbsMutex\l|\
+ TCPServer(port : short, bufferSize : unsigned int)\l\
+ init() : bool\l\
+ virtual run() : void\l\
+ virtual processData() : void\l\
+ close() : void\l\
+ virtual accept() : bool\l\
}"
]

// Interface thread
IAbsThread [
label = "{\
\<interface\> - IAbsThread|\
typedef void* (*startRoutine)(void*)\l|\
+ launch(startRoutine, void* args) : bool\l\
+ join() : bool\l\
+ exit() : void\l\
}"
]

// Concrete thread class for unix
AbsThread [
label = "{\
AbsThread|\
- _tid : pthread_t*\l|\
+ launch(startRoutine, void* args) : bool\l\
+ join() : bool\l\
+ exit() : void\l\
}"
]

// Interface IAbsMutex
IAbsMutex [
label = "{\
\<interface\> - IAbsMutex|\
+ init() : bool\l\
+ destroy() : void\l\
+ lock() : bool\l\
+ tryLock() : bool\l\
+ unlock() : bool\l\
}"
]

// Class AbsMutex
AbsMutex [
label = "{\
AbsMutex|\
- _mid : pthread_mutex_t*\l|\
+ init() : bool\l\
+ destroy() : void\l\
+ lock() : bool\l\
+ tryLock() : bool\l\
+ unlock() : bool\l\
}"
]

edge [
fontname = "Bitstream Vera Sans"
fontsize = 8
]

// Composition
AbsMutex -> TCPServer [arrowhead = "diamond" style = "solid"]
AbsMutex -> TCPSession [arrowhead = "diamond" style = "solid"]
AbsThread -> Party [arrowhead = "diamond" style = "solid"]
AbsMutex -> AEntity [arrowhead = "diamond" style = "solid"]
AbsThread -> TCPServer [arrowhead = "diamond" style = "solid"]
UDP -> Party [arrowhead = "diamond" style = "solid"]
Ressource -> Party [arrowhead = "diamond" style = "solid"]
EntityFactory -> Ressource [arrowhead = "diamond" style = "solid"]
ObjectFactory -> Ressource [arrowhead = "diamond" style = "solid"]
ISharedLibrary -> EntityFactory [arrowhead = "diamond" style = "solid"]
IObject -> ObjectFactory [arrowhead = "diamond" style = "solid"]
PacketHeader -> APacket [arrowhead = "diamond" style = "solid"]
AData -> APacket [arrowhead = "diamond" style = "solid"]
PacketFactory -> Server [arrowhead = "diamond" style = "solid"]
PacketFactory -> Party [arrowhead = "diamond" style = "solid"]
PhysicEngine -> Party [arrowhead = "diamond" style = "solid"]
Ressource -> PhysicEngine [arrowhead = "diamond" style = "solid"]
PacketFactory -> AEntity [arrowhead = "diamond" style = "solid"]

// Aggregation
TCPSession -> TCPServer [arrowhead = "odiamond" style = "solid"]
Client -> Server [arrowhead = "odiamond" style = "solid"]
Client -> Party [arrowhead = "odiamond" style = "solid"]
Party -> Server [arrowhead = "odiamond" style = "solid"]
IEntity -> EntityFactory [arrowhead = "odiamond" style = "solid"]
IEntity -> Ressource [arrowhead = "odiamond" style = "solid"]
Map -> Ressource [arrowhead = "odiamond" style = "solid"]
IObject -> Ressource [arrowhead = "odiamond" style = "solid"]
Frame -> Map [arrowhead = "odiamond" style = "solid"]
Player -> Ressource [arrowhead = "odiamond" style = "solid"]
APacket -> PacketFactory [arrowhead = "odiamond" style = "solid"]

// Heritage
Server -> TCPServer [arrowhead = "onormal" style = "solid"]
Client -> TCPSession [arrowhead = "onormal" style = "solid"]
SharedLibrary_unix -> ISharedLibrary [arrowhead = "onormal" style = "solid"]
Monster1 -> AEntity [arrowhead = "onormal" style = "solid"]
Monster2 -> AEntity [arrowhead = "onormal" style = "solid"]
Monster3 -> AEntity [arrowhead = "onormal" style = "solid"]
PacketLogin -> AData [arrowhead = "onormal" style = "solid"]
PacketCreateParty -> AData [arrowhead = "onormal" style = "solid"]
PacketMap -> AData [arrowhead = "onormal" style = "solid"]
PacketEmpty -> AData [arrowhead = "onormal" style = "solid"]
PacketReady -> AData [arrowhead = "onormal" style = "solid"]
PacketAction -> AData [arrowhead = "onormal" style = "solid"]
PacketColor -> AData [arrowhead = "onormal" style = "solid"]
PacketLoginId -> AData [arrowhead = "onormal" style = "solid"]
PacketLoginColor -> AData [arrowhead = "onormal" style = "solid"]
PacketSpawn -> AData [arrowhead = "onormal" style = "solid"]
PacketMove -> AData [arrowhead = "onormal" style = "solid"]
PacketId -> AData [arrowhead = "onormal" style = "solid"]
PacketFight -> AData [arrowhead = "onormal" style = "solid"]
PacketBullet -> AData [arrowhead = "onormal" style = "solid"]

// Implement interface
AbsThread -> IAbsThread [arrowhead = "onormal" style = "dashed"]
AbsMutex -> IAbsMutex [arrowhead = "onormal" style = "dashed"]
TCPServer -> ITCPServer [arrowhead = "onormal" style = "dashed"]
UDP -> IUDP [arrowhead = "onormal" style = "dashed"]
TCPSession -> ITCPSession [arrowhead = "onormal" style = "dashed"]
Player -> IEntity [arrowhead = "onormal" style = "dashed"]
AEntity -> IEntity [arrowhead = "onormal" style = "dashed"]
BonusHealth -> IObject [arrowhead = "onormal" style = "dashed"]
Laser -> IObject [arrowhead = "onormal" style = "dashed"]
DoubleLaser -> IObject [arrowhead = "onormal" style = "dashed"]
Object0 -> IObject [arrowhead = "onormal" style = "dashed"]

}
