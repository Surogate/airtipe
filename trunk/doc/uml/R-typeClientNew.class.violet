<?xml version="1.0" encoding="UTF-8"?> 
<java version="1.6.0" class="java.beans.XMLDecoder"> 
 <object class="com.horstmann.violet.ClassDiagramGraph"> 
  <void method="addNode"> 
   <object id="ClassNode0" class="com.horstmann.violet.ClassNode"> 
    <void property="attributes"> 
     <void property="text"> 
      <string>- _wind : Graphics
- _renderer : IRenderer
- _networkManager : NetworkManager
- _eventManager : IEventManager
- _healthPoint : int
- _ressources : Ressource
- _sprites : SpriteManager</string> 
     </void> 
    </void> 
    <void property="methods"> 
     <void property="text"> 
      <string>+ newGame() : void 
+ run() : void</string> 
     </void> 
    </void> 
    <void property="name"> 
     <void property="text"> 
      <string>Client</string> 
     </void> 
    </void> 
   </object> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>742.8670538916597</double> 
     <double>654.5977300052249</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object id="ClassNode1" class="com.horstmann.violet.ClassNode"> 
    <void property="attributes"> 
     <void property="text"> 
      <string>- _type : EntityType</string> 
     </void> 
    </void> 
    <void property="methods"> 
     <void property="text"> 
      <string>+ getType() const : EntityType </string> 
     </void> 
    </void> 
    <void property="name"> 
     <void property="text"> 
      <string>Entity</string> 
     </void> 
    </void> 
   </object> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>584.2018089619156</double> 
     <double>1395.4716310868475</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object id="ClassNode2" class="com.horstmann.violet.ClassNode"> 
    <void property="attributes"> 
     <void property="text"> 
      <string>- _type : GroundType</string> 
     </void> 
    </void> 
    <void property="methods"> 
     <void property="text"> 
      <string>+ getType() const : GroundType</string> 
     </void> 
    </void> 
    <void property="name"> 
     <void property="text"> 
      <string>Ground</string> 
     </void> 
    </void> 
   </object> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>1140.2903830330529</double> 
     <double>1401.6068737768637</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object id="ClassNode3" class="com.horstmann.violet.ClassNode"> 
    <void property="attributes"> 
     <void property="text"> 
      <string>- std::map&lt;int, sf::Sprite&gt; _object;
- int _currentFrame;
- unsigned int _id;</string> 
     </void> 
    </void> 
    <void property="methods"> 
     <void property="text"> 
      <string>+ AGameObject(std::map&lt;int, ISprite&gt; const &amp; Sprites)
+ AGameObject &amp; cloneRewind();
+ ISprite const &amp; getItem() const;
+ int getCurrentFrame() const;
+ void nextFrame() const;
+ unsigned int getId() const;
</string> 
     </void> 
    </void> 
    <void property="name"> 
     <void property="text"> 
      <string>AGameObject</string> 
     </void> 
    </void> 
   </object> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>804.7813688987358</double> 
     <double>1102.3504371348608</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object id="ClassNode4" class="com.horstmann.violet.ClassNode"> 
    <void property="attributes"> 
     <void property="text"> 
      <string>- _type : BulletType</string> 
     </void> 
    </void> 
    <void property="methods"> 
     <void property="text"> 
      <string>+ getType() const : BulletType</string> 
     </void> 
    </void> 
    <void property="name"> 
     <void property="text"> 
      <string>Bullet</string> 
     </void> 
    </void> 
   </object> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>940.9366296226881</double> 
     <double>1402.3650287470762</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object id="ClassNode5" class="com.horstmann.violet.ClassNode"> 
    <void property="attributes"> 
     <void property="text"> 
      <string>- _type : ItemType</string> 
     </void> 
    </void> 
    <void property="methods"> 
     <void property="text"> 
      <string>+ getType() const : ItemType</string> 
     </void> 
    </void> 
    <void property="name"> 
     <void property="text"> 
      <string>Item</string> 
     </void> 
    </void> 
   </object> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>769.6361773822096</double> 
     <double>1396.9866145170706</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object id="ClassNode6" class="com.horstmann.violet.ClassNode"> 
    <void property="methods"> 
     <void property="text"> 
      <string>+ &lt;static&gt; createGameObject(image : ImageLoader const &amp;, ItemType : itemType const &amp;) : GameObject const &amp; </string> 
     </void> 
    </void> 
    <void property="name"> 
     <void property="text"> 
      <string>GameItemFactory</string> 
     </void> 
    </void> 
   </object> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>641.5168528146096</double> 
     <double>954.7848055551551</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object id="ClassNode7" class="com.horstmann.violet.ClassNode"> 
    <void property="attributes"> 
     <void property="text"> 
      <string>- _app : sf::renderWindow
- _sprites : std::map&lt;unsigned int, sf::sprite&gt;
- _ressources : Ressource &amp;</string> 
     </void> 
    </void> 
    <void property="methods"> 
     <void property="text"> 
      <string>+ Renderer(Ressource &amp;)
+ create_windows() : void
+ close_windows() : void
+ sprite_display(id : unsigned int, x : unsigned int, y : unsigned int) : void
+ sprite_destroy(id : unsigned int) : void
+ sprite_move(id : unsigned int, x : unsigned int, y : unsigned int ) : void
+ sprite_anim(id : unsigned int) : void
+ load() : void
+ getevent(timestamp : float ) : void
+ draw() : void
+ loop(Network&amp;) : void</string> 
     </void> 
    </void> 
    <void property="name"> 
     <void property="text"> 
      <string>Renderer
</string> 
     </void> 
    </void> 
   </object> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>99.37974074020678</double> 
     <double>614.2784444412406</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object id="ClassNode8" class="com.horstmann.violet.ClassNode"> 
    <void property="attributes"> 
     <void property="text"> 
      <string>- NetworkManager _networkManager;
- _renderer : Renderer
- _info : map&lt;PacketType, PAction&gt;
- _ressources : Ressource &amp;</string> 
     </void> 
    </void> 
    <void property="methods"> 
     <void property="text"> 
      <string>+ EventManager(ressources : Ressource &amp;, networkManager : NetworkManager &amp;)
+ getEvent() : void
+ InputEvent() : void
+ networkEvent() : void
+ getEvent() : void
+ InputEvent() : void
+ networkEvent() : void</string> 
     </void> 
    </void> 
    <void property="name"> 
     <void property="text"> 
      <string>EventManager</string> 
     </void> 
    </void> 
   </object> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>1080.1434743643217</double> 
     <double>637.8105582070157</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object id="ClassNode9" class="com.horstmann.violet.ClassNode"> 
    <void property="methods"> 
     <void property="text"> 
      <string>+ loginOK(pak : APacket *) : void
+ createOK(pak : APacket *) : void
+ sendMaps(pak : APacket *) : void
+ sendMapsEnd(pak : APacket *) : void
+ addMapOK(pak : APacket *) : void
+ validPartyOK(pak : APacket *) : void
+ joinOK(pak : APacket *) : void
+ joinParty(pak : APacket *) : void
+ leftParty(pak : APacket *) : void
+ playerColorChange(pak : APacket *) : void
+ playerReady(pak : APacket *) : void
+ playerNotReady(pak : APacket *) : void
+ partyStarting(pak : APacket *) : void
+ sendMapDesc(pak : APacket *) : void
+ sendMapDescEnd(pak : APacket *) : void
+ stop(pak : APacket *) : void
+ loginAlreadyExists(pak : APacket *) : void
+ badLoginFormat(pak : APacket *) : void
+ loginKO(pak : APacket *) : void
+ createKO(pak : APacket *) : void
+ maxPlayerToHigh(pak : APacket *) : void
+ validPartyKO(pak : APacket *) : void
+ spawn(pak : APacket *) : void
+ move(pak : APacket *) : void
+ fight(pak : APacket *) : void
+ die(pak : APacket *) : void
+ gainHP(pak : APacket *) : void
+ looseHP(pak : APacket *) : void
+ bulletType(pak : APacket *) : void</string> 
     </void> 
    </void> 
    <void property="name"> 
     <void property="text"> 
      <string>NetworkActions</string> 
     </void> 
    </void> 
   </object> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>1166.0</double> 
     <double>40.0</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object id="ClassNode10" class="com.horstmann.violet.ClassNode"> 
    <void property="attributes"> 
     <void property="text"> 
      <string>- std::map&lt;std::string, BulletType&gt; _bullet;
- std::map&lt;std::string, EntityType&gt; _entity;
- std::map&lt;std::string, ItemType&gt; _item;
- std::map&lt;std::string, GroundType&gt; _ground;
</string> 
     </void> 
    </void> 
    <void property="name"> 
     <void property="text"> 
      <string>Ressource</string> 
     </void> 
    </void> 
   </object> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>876.0</double> 
     <double>324.0</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object id="ClassNode11" class="com.horstmann.violet.ClassNode"> 
    <void property="attributes"> 
     <void property="text"> 
      <string>- PacketFactory _pf;</string> 
     </void> 
    </void> 
    <void property="methods"> 
     <void property="text"> 
      <string>void sendUDPRequest(APacket const &amp; packet);
APacket const &amp; recvUDPRequest();
void sendTCPRequest(APacket const &amp; packet);
APacket const &amp; recvTCPRequest();</string> 
     </void> 
    </void> 
    <void property="name"> 
     <void property="text"> 
      <string>NetworkManager</string> 
     </void> 
    </void> 
   </object> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>548.9527415192381</double> 
     <double>322.0312901928402</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object id="ClassNode12" class="com.horstmann.violet.ClassNode"> 
    <void property="attributes"> 
     <void property="text"> 
      <string>- std::map&lt;std::string, GameObject&gt; _sprite;</string> 
     </void> 
    </void> 
    <void property="methods"> 
     <void property="text"> 
      <string>+ void LoadObjects(std::string const &amp; path)</string> 
     </void> 
    </void> 
    <void property="name"> 
     <void property="text"> 
      <string>SpriteManager</string> 
     </void> 
    </void> 
   </object> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>720.7474225076863</double> 
     <double>191.18323781909592</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object id="ClassNode13" class="com.horstmann.violet.ClassNode"> 
    <void property="attributes"> 
     <void property="text"> 
      <string>- _left : int
- _top : int
- _width : int
- _height : int
- _animationFrame : int</string> 
     </void> 
    </void> 
    <void property="methods"> 
     <void property="text"> 
      <string>+ GameItemInformationLoader(ObjectName : string const &amp;, informationFileName : string const &amp;)
+ getLeft() const : int 
+ getTop() const : int
+ getWidth() const : int
+ getHeight() const : int</string> 
     </void> 
    </void> 
    <void property="name"> 
     <void property="text"> 
      <string>GameItemInformationLoader</string> 
     </void> 
    </void> 
   </object> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>29.0851374147187</double> 
     <double>894.028640350245</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object id="ClassNode14" class="com.horstmann.violet.ClassNode"> 
    <void property="attributes"> 
     <void property="text"> 
      <string>- sf::Image _image;
- std::string _infoFilename;</string> 
     </void> 
    </void> 
    <void property="methods"> 
     <void property="text"> 
      <string>+ ImageLoader(std::string const &amp;filename);
+ std::string const &amp; getInfoFilename() const;</string> 
     </void> 
    </void> 
    <void property="name"> 
     <void property="text"> 
      <string>ImageLoader</string> 
     </void> 
    </void> 
   </object> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>284.21242104352655</double> 
     <double>170.708170075829</double> 
    </void> 
   </object> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="VHV"/> 
    </void> 
    <void property="endArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="TRIANGLE"/> 
    </void> 
   </object> 
   <object idref="ClassNode2"/> 
   <object idref="ClassNode3"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="VHV"/> 
    </void> 
    <void property="endArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="TRIANGLE"/> 
    </void> 
   </object> 
   <object idref="ClassNode4"/> 
   <object idref="ClassNode3"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="VHV"/> 
    </void> 
    <void property="endArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="TRIANGLE"/> 
    </void> 
   </object> 
   <object idref="ClassNode5"/> 
   <object idref="ClassNode3"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="VHV"/> 
    </void> 
    <void property="endArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="TRIANGLE"/> 
    </void> 
   </object> 
   <object idref="ClassNode1"/> 
   <object idref="ClassNode3"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="HVH"/> 
    </void> 
    <void property="endArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="V"/> 
    </void> 
   </object> 
   <object idref="ClassNode6"/> 
   <object idref="ClassNode3"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="VHV"/> 
    </void> 
    <void property="endArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="TRIANGLE"/> 
    </void> 
   </object> 
   <object idref="ClassNode8"/> 
   <object idref="ClassNode9"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="HVH"/> 
    </void> 
    <void property="startArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="BLACK_DIAMOND"/> 
    </void> 
   </object> 
   <object idref="ClassNode0"/> 
   <object idref="ClassNode10"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="HVH"/> 
    </void> 
    <void property="startArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="BLACK_DIAMOND"/> 
    </void> 
   </object> 
   <object idref="ClassNode0"/> 
   <object idref="ClassNode8"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="HVH"/> 
    </void> 
    <void property="startArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="BLACK_DIAMOND"/> 
    </void> 
   </object> 
   <object idref="ClassNode0"/> 
   <object idref="ClassNode7"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="HVH"/> 
    </void> 
    <void property="startArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="BLACK_DIAMOND"/> 
    </void> 
   </object> 
   <object idref="ClassNode0"/> 
   <object idref="ClassNode11"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="HVH"/> 
    </void> 
    <void property="startArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="BLACK_DIAMOND"/> 
    </void> 
   </object> 
   <object idref="ClassNode0"/> 
   <object idref="ClassNode12"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="HVH"/> 
    </void> 
    <void property="endArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="V"/> 
    </void> 
   </object> 
   <object idref="ClassNode13"/> 
   <object idref="ClassNode6"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="HVH"/> 
    </void> 
    <void property="startArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="BLACK_DIAMOND"/> 
    </void> 
   </object> 
   <object idref="ClassNode12"/> 
   <object idref="ClassNode14"/> 
  </void> 
 </object> 
</java> 
